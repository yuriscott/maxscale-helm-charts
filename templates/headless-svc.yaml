apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-headless" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if or .Values.service.headless.annotations .Values.commonAnnotations }}
  {{- $annotations := merge .Values.service.headless.annotations .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    {{- $appProtocolAvailable := (semverCompare ">=1.20-0" (include "common.capabilities.kubeVersion" .)) }}
    - name: mysql
      port: 3306
      targetPort: mysql
      {{- if $appProtocolAvailable }}
      appProtocol: mysql
      {{- end }}
    - name: readonly
      port: 3307
      targetPort: readonly
      {{- if $appProtocolAvailable }}
      appProtocol: mysql
      {{- end }}
    - name: smart
      port: 3308
      targetPort: smart
      {{- if $appProtocolAvailable }}
      appProtocol: mysql
      {{- end }}
  publishNotReadyAddresses: {{ .Values.service.headless.publishNotReadyAddresses }}
  {{- $podLabels := merge .Values.podLabels .Values.commonLabels }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
